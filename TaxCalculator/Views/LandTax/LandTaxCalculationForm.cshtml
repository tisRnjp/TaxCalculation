@model TaxCalculator.ViewModels.LandTaxViewModel

@{
                /**/

                /**/

                ViewBag.Title = "Land Tax Calculation";
                Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>जग्गा तर्फ</h2>


@using (Html.BeginForm("Save", "LandTax"))
{

    @Html.ValidationSummary(true, "Please fix the following errors.")



    <div class="form-group row">
        @Html.LabelFor(m => m.CitizenLand.VDC, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.CitizenLand.VDC, new { @class = "form-control", id = "land-vdc", @readonly = true })
            @Html.ValidationMessageFor(m => m.LandTaxHistory.CitizenLand.VDC)
        </div>
    </div>

    <div class="form-group row">
        @Html.LabelFor(m => m.CitizenLand.WardNo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.CitizenLand.WardNo, new { @class = "form-control", id = "land-wardno", @readonly = true })
            @Html.ValidationMessageFor(m => m.LandTaxHistory.CitizenLand.WardNo)
        </div>
    </div>

    <div class="form-group row">
        @Html.LabelFor(m => m.CitizenLand.SheetNo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.CitizenLand.SheetNo, new { @class = "form-control", id = "land-sheetno", @readonly = true })
            @Html.ValidationMessageFor(m => m.LandTaxHistory.CitizenLand.WardNo)
        </div>
    </div>

    <div class="form-group row">
        @Html.LabelFor(m => m.CitizenLand.KittaNo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.CitizenLand.KittaNo, new { @class = "form-control", id = "land-kittano", @readonly = true })
            @Html.ValidationMessageFor(m => m.LandTaxHistory.CitizenLand.KittaNo)
        </div>
    </div>



    <div class="form-group row">
        @Html.LabelFor(m => m.LandTaxHistory.FY, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.LandTaxHistory.FY, new { @class = "form-control", id = "land-FY" })
            @Html.ValidationMessageFor(m => m.LandTaxHistory.FY)
        </div>
    </div>


    <div class="form-group row">
        @Html.LabelFor(m => m.LandTaxHistory.FromFiscalYearId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.LandTaxHistory.FromFiscalYearId, new SelectList(Model.FiscalYears, "Id", "FY"), "Select From Fiscal Year", new { @class = "form-control", @Readonly = true })
        </div>
    </div>

    <div class="form-group row">
        @Html.LabelFor(m => m.LandTaxHistory.ToFiscalYearId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.LandTaxHistory.ToFiscalYearId, new SelectList(Model.FiscalYears, "Id", "FY"), "Select From Fiscal Year", new { @class = "form-control", @Readonly = true })
        </div>
    </div>


    <div class="form-group row">
        @Html.LabelFor(m => m.LandTaxHistory.ValuationArea, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.LandTaxHistory.ValuationArea, new { @class = "form-control", id = "land-area", @readonly = true })
        </div>
    </div>


    @*<div class="form-group">
            @Html.LabelFor(model => model.HouseValuations, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.HouseTax.HouseCategory, new SelectList(Model.HouseValuations, "HouseType", "Description"), " ", new { @class = "form-control", id = "house-category" })
                @Html.ValidationMessageFor(model => model.HouseTax.HouseCategory, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group row">
        @Html.LabelFor(model => model.LandValuations, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.LandTaxHistory.LandCategory, new SelectList(Model.LandValuations, "LandType", "Description"), " ", new { @class = "form-control", id = "land-category" })
            @Html.ValidationMessageFor(model => model.LandTaxHistory.LandCategory, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row">
        @Html.LabelFor(m => m.LandTaxHistory.CostPerUnitArea, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.LandTaxHistory.CostPerUnitArea, new { @class = "form-control", id = "land-cost", @readonly = true })
        </div>
    </div>

    <div class="form-group row">
        @Html.LabelFor(m => m.LandTaxHistory.CitizenId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.LandTaxHistory.CitizenId, new SelectList(Model.Citizens, "CitizenId", "FirstName"), "Select Citizen", new { @class = "form-control", @Readonly = true })
        </div>
    </div>

    <div class="form-group row">

        @Html.LabelFor(m => m.LandTaxHistory.TotalCost, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.LandTaxHistory.TotalCost, new { @class = "form-control", id = "land-total", @readonly = true })
        </div>

    </div>

    @Html.HiddenFor(m => m.LandTaxHistory.HouseTaxHistoryId)
    @Html.HiddenFor(m => m.LandTaxHistory.CitizenLandId)
    @Html.HiddenFor(m => m.LandTaxHistory.Id)
    @Html.AntiForgeryToken()
    <button type="submit" class="btn btn-primary">Save and Print</button>


    @*<button type="submit" name="save" class="btn btn-primary" formaction="LandTax/Save" >Save</button>
        <button type="submit" name="print" class="btn btn-primary" formaction="LandTax/TaxReport">Print</button>*@

    @*@Html.ActionLink("Save", "Save", "LandTax", new { @class = "btn btn-primary" } )*@

}

@section scripts{
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {
            $("#cost").change(function () {
                console.log($("#cost").val() * $("#area").val());
                console.log($("#cost").val());
                console.log($("#area").val());
                $("#total").val($("#cost").val() * $("#area").val());

            });

               $("#land-category").on("change", function () {
                    console.log('change event fired ' + $("#land-category").val());
                    var selectedCategory = $("#land-category").val();
                    console.log('a');
                    $.getJSON('@Url.Action("GetLandValuation","LandTax")', { category: selectedCategory }, function (landValuation) {
                        console.log('ajax call');
                        console.log(landValuation);

                        if (landValuation != null && !jQuery.isEmptyObject(landValuation)) {
                            $("#land-cost").val(landValuation.CostPerAnna);
                            //Calculate total cost
                            if ($("#land-area").val() !== null && $("#land-cost").val() !== null)
                                $("#land-total").val($("#land-area").val() * $("#land-cost").val());

                        }
                    });

               });

        });

    </script>

}
