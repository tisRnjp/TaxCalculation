@model TaxCalculator.Models.HouseTaxViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>घर तर्फ</h2>

@using (Html.BeginForm("Create", "HouseTax", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @*<div class="panel panel-primary"></div>*@
<div class="form-horizontal">

    <hr />
    <div class="container">
        <div class="panel-group">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h4 class="panel-title">
                        <a data-toggle="collapse" href="#collapse1">सामान्य विवरण</a>
                    </h4>
                </div>
                <hr />

                <div class="form-group">
                    @Html.LabelFor(model => model.CitizenHouse.Length, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CitizenHouse.Length, new { htmlAttributes = new { @class = "form-control", @readonly = true, id = "house-length" } })
                        @Html.ValidationMessageFor(model => model.CitizenHouse.Length, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CitizenHouse.Width, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CitizenHouse.Width, new { htmlAttributes = new { @class = "form-control", @readonly = true, id = "house-width" } })
                        @Html.ValidationMessageFor(model => model.CitizenHouse.Width, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*comment this later*@
                <div class="form-group">
                    @Html.LabelFor(model => model.HouseTax.FY, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.HouseTax.FY, new { htmlAttributes = new { @class = "form-control", id = "FY" } })
                        @Html.ValidationMessageFor(model => model.HouseTax.FY, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(m => m.HouseTax.FromFiscalYearId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(m => m.HouseTax.FromFiscalYearId, new SelectList(Model.FiscalYears, "Id", "FY"), "Select From Fiscal Year", new { @class = "form-control", id = "house-fromFY", @Readonly = true })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(m => m.HouseTax.ToFiscalYearId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(m => m.HouseTax.ToFiscalYearId, new SelectList(Model.FiscalYears, "Id", "FY"), "Select To Fiscal Year", new { @class = "form-control", id = "house-toFY", @Readonly = true })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.CitizenHouse.Area, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CitizenHouse.Area, new { htmlAttributes = new { @class = "form-control", id = "house-area" } })
                        @Html.ValidationMessageFor(model => model.CitizenHouse.Area, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.HouseValuations, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.HouseTax.HouseCategory, new SelectList(Model.HouseValuations, "HouseType", "Description"), " ", new { @class = "form-control", id = "house-category" })
                        @Html.ValidationMessageFor(model => model.HouseTax.HouseCategory, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.HouseTax.CostPerUnitArea, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.HouseTax.CostPerUnitArea, new { htmlAttributes = new { @class = "form-control", id = "house-costPerUnitArea", @readonly = true } })
                        @Html.ValidationMessageFor(model => model.HouseTax.CostPerUnitArea, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CitizenHouse.Floor, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CitizenHouse.Floor, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CitizenHouse.Floor, "", new { @class = "text-danger" })
                    </div>
                </div>
                <p> @Model.HouseTax.HouseCategory </p>

                <div class="form-group">
                    @Html.LabelFor(model => model.HouseTax.TotalCost, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.HouseTax.TotalCost, new { htmlAttributes = new { @class = "form-control", id = "house-totalCost", @readonly = true } })
                        @Html.ValidationMessageFor(model => model.HouseTax.TotalCost, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>

            <div class="panel panel-default">
                <div class="panel-heading">
                    <h4 class="panel-title">
                        <a data-toggle="collapse" href="#LastFYCalculation">गत आ व को विवरण</a>
                    </h4>
                </div>
                <div id="LastFYCalculation" class="panel-collapse collapse">
                    <hr />
                    <div class="form-group">
                        @Html.LabelFor(model => model.HouseTax.LastFYDepreciationRate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.HouseTax.LastFYDepreciationRate, new { htmlAttributes = new { @class = "form-control", id = "house-LastFYdepreciationRate" } })
                            @Html.ValidationMessageFor(model => model.HouseTax.LastFYDepreciationRate, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.HouseTax.LastFYDepreciationAmount, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.HouseTax.LastFYDepreciationAmount, new { htmlAttributes = new { @class = "form-control", @readonly = true, id = "LastFYdepreciationamount" } })
                            @Html.ValidationMessageFor(model => model.HouseTax.LastFYDepreciationAmount, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.HouseTax.LastFYGrossCost, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.HouseTax.LastFYGrossCost, new { htmlAttributes = new { @class = "form-control", @readonly = true, id = "house-LastFYgrossCost" } })
                            @Html.ValidationMessageFor(model => model.HouseTax.GrossCost, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>




            <div class="panel panel-default">
                <div class="panel-heading">
                    <h4 class="panel-title">
                        <a data-toggle="collapse" href="#collapse1">चालु आ व को विवरण</a>
                    </h4>
                </div>
                <hr />
                <div class="form-group">
                    @Html.LabelFor(model => model.HouseTax.DepreciationRate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.HouseTax.DepreciationRate, new { htmlAttributes = new { @class = "form-control", id = "house-depreciationRate" } })
                        @Html.ValidationMessageFor(model => model.HouseTax.DepreciationRate, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.HouseTax.DepreciationAmount, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.HouseTax.DepreciationAmount, new { htmlAttributes = new { @class = "form-control", @readonly = true, id = "depreciationamount" } })
                        @Html.ValidationMessageFor(model => model.HouseTax.DepreciationAmount, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.HouseTax.GrossCost, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.HouseTax.GrossCost, new { htmlAttributes = new { @class = "form-control", @readonly = true, id = "house-grossCost" } })
                        @Html.ValidationMessageFor(model => model.HouseTax.GrossCost, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
        </div>
    </div>
    
    @Html.HiddenFor(model => model.HouseTax.ToFiscalYear, new { @class = "house-toFYValue" })
    @Html.HiddenFor(model => model.HouseTax.TotalArea)
    @Html.HiddenFor(model => model.HouseTax.CitizenHouseId)
    @Html.HiddenFor(model => model.CitizenHouse.Id)

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Next" class="btn btn-default" />
        </div>
    </div>
</div>
}

@section scripts{
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            $("#house-length").blur(function () {
                if ($("#house-length").val() !== null && $("#house-width").val() !== null)
                    $("#house-area").val($("#house-length").val() * $("#house-width").val());
            });

            $("#house-width").blur(function () {
                if ($("#house-length").val() !== null && $("#house-width").val() !== null)
                    $("#house-area").val($("#house-length").val() * $("#house-width").val());
            });

            $("#house-costPerUnitArea").blur(function () {
                if ($("#house-area").val() !== null && $("#house-costPerUnitArea").val() !== null)
                    $("#house-totalCost").val($("#house-costPerUnitArea").val() * $("#house-area").val());
            });

            $("#house-depreciationRate").blur(function () {
                if ($("#house-totalCost").val() !== null && $("#house-depreciationRate").val() !== null) {
                    $("#house-grossCost").val($("#house-totalCost").val() - ($("#house-depreciationRate").val() * $("#house-totalCost").val() * 0.01));
                    $("#depreciationamount").val(($("#house-depreciationRate").val() * $("#house-totalCost").val() * 0.01));
                }
            });

      

            //Fiscal Year String Assignment
            $("#house-toFY").blur(function () {
                if ($("#house-toFY").val() !== null) {
                    $("#house-toFYValue").val("#house-toFY");
                    console.log($("#house-toFYValue").val());
                }
            });


            $("#house-LastFYdepreciationRate").change(function () {
                var selectedCategory = $("#house-category").val();
                $.getJSON('@Url.Action("GetHouseValuation")', { category: selectedCategory }, function (houseValuation) {
                    if (houseValuation != null && !jQuery.isEmptyObject(houseValuation)) {

                        
                        
                        //Calculate total cost
                        if ($("#house-area").val() !== null && $("#house-costPerUnitArea").val() !== null)
                            $("#house-totalCost").val($("#house-costPerUnitArea").val() * $("#house-area").val());

                        //Last FY calculation
                        //Calculate depreciation amount and gross cost
                        if ($("#house-totalCost").val() !== null && $("#house-LastFYdepreciationRate").val() !== null) {
                            $("#house-LastFYgrossCost").val($("#house-totalCost").val() - ($("#house-LastFYdepreciationRate").val() * $("#house-totalCost").val() * 0.01));
                            $("#LastFYdepreciationamount").val(($("#house-LastFYdepreciationRate").val() * $("#house-totalCost").val() * 0.01));
                        }

                        //Current Year Calculation
                        $("#house-depreciationRate").val($("#house-LastFYdepreciationRate").val() * 1 + houseValuation.DepreciationRate);
                        //Calculate depreciation amount and gross cost
                        if ($("#house-totalCost").val() !== null && $("#house-depreciationRate").val() !== null) {
                            $("#house-grossCost").val($("#house-totalCost").val() - ($("#house-depreciationRate").val() * $("#house-totalCost").val() * 0.01));
                            $("#depreciationamount").val(($("#house-depreciationRate").val() * $("#house-totalCost").val() * 0.01));
                        }

                    }
                }
            )});


            $("#house-category").on("change", function () {
                console.log('change event fired ' + $("#house-category").val());
                var selectedCategory = $("#house-category").val();
                console.log('a');
                $.getJSON('@Url.Action("GetHouseValuation")', { category: selectedCategory }, function (houseValuation) {
                    console.log('ajax call');
                    console.log(houseValuation);

                    
                        if (houseValuation != null && !jQuery.isEmptyObject(houseValuation)) {

                            $("#house-costPerUnitArea").val(houseValuation.CostPerArea);
                            

                            //Calculate total cost
                            if ($("#house-area").val() !== null && $("#house-costPerUnitArea").val() !== null)
                                $("#house-totalCost").val($("#house-costPerUnitArea").val() * $("#house-area").val());

                            //Calculate depreciation amount and gross cost
                            if ($("#house-totalCost").val() !== null && $("#house-depreciationRate").val() !== null) {
                                $("#house-grossCost").val($("#house-totalCost").val() - ($("#house-depreciationRate").val() * $("#house-totalCost").val() * 0.01));
                                $("#depreciationamount").val(($("#house-depreciationRate").val() * $("#house-totalCost").val() * 0.01));
                            }
                        }
                });

            });
        });

    </script>


}

@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@
